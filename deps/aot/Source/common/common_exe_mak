#########################################
######## common part  ###################
#########################################


lib_pathes := $(subst ..,-L..,$(subst lib, -l,$(libs)))

# we have to use "--start-group --end-group" in order to solve cross-references

ifeq ($(link_pcre),1)
	pcre_libs := -L../../../pcre -lpcrecpp -L../../../pcre -lpcre
endif


libs_argument := -Wl,--start-group $(pcre_libs) $(subst .$(lib_ext),,$(lib_pathes)) -Wl,--end-group


ifeq ($(libmode), static)
	lib_mode_switch := -static
endif

$(ExeName) : $(objects) $(libs)
	$(mode_error)
ifneq ($(shell uname), Darwin)
	$(CXX)  $(lib_mode_switch) $(lparams)  $(objects) $(contrib) $(stllib)  -o $(ExeName) $(libs_argument) 
	cp $(ExeName) ../../Bin
endif

$(libs): %$(ct).$(lib_ext) : FORCE
	$(mode_error)
	$(MAKE) -C $(dir $@) mode=$(mode) libmode=$(libmode)

$(objects): %.o$(ct) : %.cpp
	$(mode_error)
	$(CXX) $(cparams) $< -o $@



FORCE:

include $(wildcard *.d)

clean: ;
	-rm $(objects)
	-rm *.d
	-rm $(ExeName)
	-for catal in $(dir $(libs)); do  $(MAKE) -C  $$catal mode=$(mode) clean;  done	

